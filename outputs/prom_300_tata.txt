-----TRAINING
---SEARCH FOR BEST SPA(s)
nb_iterations , gamma, include_prev_context, handle_N_setting, ratio, ensemble type, num_threads, time taken, accuracy
1, 0.1, False, remove, 0.0, entropy, 48, 0.677, 60.52
1, 0.1, False, remove, 0.0, depth, 48, 1.137, 60.03
1, 0.5, False, remove, 0.0, entropy, 48, 1.592, 61.34
1, 0.5, False, remove, 0.0, depth, 48, 2.049, 60.03
1, 0.33, False, remove, 0.0, entropy, 48, 2.522, 60.85
1, 0.33, False, remove, 0.0, depth, 48, 2.991, 60.20
1, 0.75, False, remove, 0.0, entropy, 48, 3.473, 61.66
1, 0.75, False, remove, 0.0, depth, 48, 3.946, 61.01
1, 1.0, False, remove, 0.0, entropy, 48, 4.424, 62.15
1, 1.0, False, remove, 0.0, depth, 48, 4.891, 60.52
1, 3.0, False, remove, 0.0, entropy, 48, 5.364, 64.60
1, 3.0, False, remove, 0.0, depth, 48, 5.828, 62.64
1, 5.0, False, remove, 0.0, entropy, 48, 6.304, 64.27
1, 5.0, False, remove, 0.0, depth, 48, 6.788, 64.27
3, 0.1, False, remove, 0.0, entropy, 48, 0.961, 61.50
3, 0.1, False, remove, 0.0, depth, 48, 1.460, 60.03
3, 0.5, False, remove, 0.0, entropy, 48, 1.955, 61.99
3, 0.5, False, remove, 0.0, depth, 48, 2.450, 60.52
3, 0.33, False, remove, 0.0, entropy, 48, 2.931, 61.01
3, 0.33, False, remove, 0.0, depth, 48, 3.411, 60.20
3, 0.75, False, remove, 0.0, entropy, 48, 3.905, 62.81
3, 0.75, False, remove, 0.0, depth, 48, 4.396, 61.50
3, 1.0, False, remove, 0.0, entropy, 48, 4.928, 63.13
3, 1.0, False, remove, 0.0, depth, 48, 5.397, 61.50
3, 3.0, False, remove, 0.0, entropy, 48, 5.883, 63.78
3, 3.0, False, remove, 0.0, depth, 48, 6.341, 62.48
3, 5.0, False, remove, 0.0, entropy, 48, 6.810, 63.46
3, 5.0, False, remove, 0.0, depth, 48, 7.283, 62.64
5, 0.1, False, remove, 0.0, entropy, 48, 0.976, 63.78
5, 0.1, False, remove, 0.0, depth, 48, 1.446, 63.46
5, 0.5, False, remove, 0.0, entropy, 48, 1.950, 63.95
5, 0.5, False, remove, 0.0, depth, 48, 2.431, 63.78
5, 0.33, False, remove, 0.0, entropy, 48, 2.940, 63.78
5, 0.33, False, remove, 0.0, depth, 48, 3.431, 63.46
5, 0.75, False, remove, 0.0, entropy, 48, 3.935, 63.30
5, 0.75, False, remove, 0.0, depth, 48, 4.418, 64.11
5, 1.0, False, remove, 0.0, entropy, 48, 4.904, 63.62
5, 1.0, False, remove, 0.0, depth, 48, 5.383, 63.95
5, 3.0, False, remove, 0.0, entropy, 48, 5.868, 64.60
5, 3.0, False, remove, 0.0, depth, 48, 6.338, 63.62
5, 5.0, False, remove, 0.0, entropy, 48, 6.839, 64.93
5, 5.0, False, remove, 0.0, depth, 48, 7.319, 63.62
7, 0.1, False, remove, 0.0, entropy, 48, 1.044, 63.46
7, 0.1, False, remove, 0.0, depth, 48, 1.542, 62.81
7, 0.5, False, remove, 0.0, entropy, 48, 2.053, 64.27
7, 0.5, False, remove, 0.0, depth, 48, 2.532, 64.11
7, 0.33, False, remove, 0.0, entropy, 48, 3.043, 64.27
7, 0.33, False, remove, 0.0, depth, 48, 3.532, 63.78
7, 0.75, False, remove, 0.0, entropy, 48, 4.089, 64.76
7, 0.75, False, remove, 0.0, depth, 48, 4.590, 64.93
7, 1.0, False, remove, 0.0, entropy, 48, 5.085, 65.42
7, 1.0, False, remove, 0.0, depth, 48, 5.582, 65.09
7, 3.0, False, remove, 0.0, entropy, 48, 6.084, 63.95
7, 3.0, False, remove, 0.0, depth, 48, 6.574, 63.95
7, 5.0, False, remove, 0.0, entropy, 48, 7.065, 64.93
7, 5.0, False, remove, 0.0, depth, 48, 7.559, 63.46
10, 0.1, False, remove, 0.0, entropy, 48, 1.291, 63.30
10, 0.1, False, remove, 0.0, depth, 48, 1.791, 63.13
10, 0.5, False, remove, 0.0, entropy, 48, 2.310, 63.30
10, 0.5, False, remove, 0.0, depth, 48, 2.807, 63.30
10, 0.33, False, remove, 0.0, entropy, 48, 3.324, 63.13
10, 0.33, False, remove, 0.0, depth, 48, 3.821, 63.30
10, 0.75, False, remove, 0.0, entropy, 48, 4.314, 64.60
10, 0.75, False, remove, 0.0, depth, 48, 4.808, 63.46
10, 1.0, False, remove, 0.0, entropy, 48, 5.317, 65.25
10, 1.0, False, remove, 0.0, depth, 48, 5.823, 63.78
10, 3.0, False, remove, 0.0, entropy, 48, 6.321, 65.91
10, 3.0, False, remove, 0.0, depth, 48, 6.814, 65.42
10, 5.0, False, remove, 0.0, entropy, 48, 7.314, 65.58
10, 5.0, False, remove, 0.0, depth, 48, 7.807, 66.07
1, 0.1, False, remove, 0.25, entropy, 48, 0.689, 61.01
1, 0.1, False, remove, 0.25, depth, 48, 1.154, 58.08
1, 0.5, False, remove, 0.25, entropy, 48, 1.642, 61.17
1, 0.5, False, remove, 0.25, depth, 48, 2.116, 61.01
1, 0.33, False, remove, 0.25, entropy, 48, 2.604, 60.20
1, 0.33, False, remove, 0.25, depth, 48, 3.078, 60.52
1, 0.75, False, remove, 0.25, entropy, 48, 3.577, 62.15
1, 0.75, False, remove, 0.25, depth, 48, 4.080, 62.15
1, 1.0, False, remove, 0.25, entropy, 48, 4.570, 63.30
1, 1.0, False, remove, 0.25, depth, 48, 5.042, 62.48
1, 3.0, False, remove, 0.25, entropy, 48, 5.533, 65.74
1, 3.0, False, remove, 0.25, depth, 48, 6.001, 65.42
1, 5.0, False, remove, 0.25, entropy, 48, 6.480, 65.91
1, 5.0, False, remove, 0.25, depth, 48, 6.999, 65.58
3, 0.1, False, remove, 0.25, entropy, 48, 0.952, 60.69
3, 0.1, False, remove, 0.25, depth, 48, 1.431, 60.85
3, 0.5, False, remove, 0.25, entropy, 48, 1.925, 63.30
3, 0.5, False, remove, 0.25, depth, 48, 2.399, 61.83
3, 0.33, False, remove, 0.25, entropy, 48, 2.893, 62.81
3, 0.33, False, remove, 0.25, depth, 48, 3.360, 61.66
3, 0.75, False, remove, 0.25, entropy, 48, 3.855, 63.13
3, 0.75, False, remove, 0.25, depth, 48, 4.324, 62.81
3, 1.0, False, remove, 0.25, entropy, 48, 4.824, 63.78
3, 1.0, False, remove, 0.25, depth, 48, 5.293, 62.97
3, 3.0, False, remove, 0.25, entropy, 48, 5.789, 65.25
3, 3.0, False, remove, 0.25, depth, 48, 6.270, 64.27
3, 5.0, False, remove, 0.25, entropy, 48, 6.771, 65.58
3, 5.0, False, remove, 0.25, depth, 48, 7.264, 64.27
5, 0.1, False, remove, 0.25, entropy, 48, 0.949, 62.97
5, 0.1, False, remove, 0.25, depth, 48, 1.439, 61.83
5, 0.5, False, remove, 0.25, entropy, 48, 1.925, 64.27
5, 0.5, False, remove, 0.25, depth, 48, 2.415, 63.95
5, 0.33, False, remove, 0.25, entropy, 48, 2.947, 64.11
5, 0.33, False, remove, 0.25, depth, 48, 3.446, 63.62
5, 0.75, False, remove, 0.25, entropy, 48, 3.946, 64.44
5, 0.75, False, remove, 0.25, depth, 48, 4.419, 63.78
5, 1.0, False, remove, 0.25, entropy, 48, 4.926, 64.11
5, 1.0, False, remove, 0.25, depth, 48, 5.420, 63.30
5, 3.0, False, remove, 0.25, entropy, 48, 5.938, 64.76
5, 3.0, False, remove, 0.25, depth, 48, 6.431, 63.95
5, 5.0, False, remove, 0.25, entropy, 48, 6.944, 64.93
5, 5.0, False, remove, 0.25, depth, 48, 7.425, 63.30
7, 0.1, False, remove, 0.25, entropy, 48, 1.101, 63.30
7, 0.1, False, remove, 0.25, depth, 48, 1.602, 63.13
7, 0.5, False, remove, 0.25, entropy, 48, 2.110, 64.76
7, 0.5, False, remove, 0.25, depth, 48, 2.597, 63.78
7, 0.33, False, remove, 0.25, entropy, 48, 3.104, 64.27
7, 0.33, False, remove, 0.25, depth, 48, 3.607, 63.78
7, 0.75, False, remove, 0.25, entropy, 48, 4.111, 64.44
7, 0.75, False, remove, 0.25, depth, 48, 4.596, 64.11
7, 1.0, False, remove, 0.25, entropy, 48, 5.089, 64.44
7, 1.0, False, remove, 0.25, depth, 48, 5.598, 64.11
7, 3.0, False, remove, 0.25, entropy, 48, 6.085, 65.58
7, 3.0, False, remove, 0.25, depth, 48, 6.582, 64.27
7, 5.0, False, remove, 0.25, entropy, 48, 7.114, 65.09
7, 5.0, False, remove, 0.25, depth, 48, 7.605, 63.95
10, 0.1, False, remove, 0.25, entropy, 48, 1.312, 64.11
10, 0.1, False, remove, 0.25, depth, 48, 1.809, 63.13
10, 0.5, False, remove, 0.25, entropy, 48, 2.343, 64.60
10, 0.5, False, remove, 0.25, depth, 48, 2.838, 64.11
10, 0.33, False, remove, 0.25, entropy, 48, 3.358, 63.78
10, 0.33, False, remove, 0.25, depth, 48, 3.859, 63.95
10, 0.75, False, remove, 0.25, entropy, 48, 4.372, 64.93
10, 0.75, False, remove, 0.25, depth, 48, 4.863, 63.62
10, 1.0, False, remove, 0.25, entropy, 48, 5.378, 65.25
10, 1.0, False, remove, 0.25, depth, 48, 5.882, 64.60
10, 3.0, False, remove, 0.25, entropy, 48, 6.389, 65.25
10, 3.0, False, remove, 0.25, depth, 48, 6.893, 64.60
10, 5.0, False, remove, 0.25, entropy, 48, 7.449, 65.58
10, 5.0, False, remove, 0.25, depth, 48, 7.946, 64.60
1, 0.1, False, remove, 0.1, entropy, 48, 0.680, 62.81
1, 0.1, False, remove, 0.1, depth, 48, 1.158, 62.32
1, 0.5, False, remove, 0.1, entropy, 48, 1.646, 63.78
1, 0.5, False, remove, 0.1, depth, 48, 2.122, 62.81
1, 0.33, False, remove, 0.1, entropy, 48, 2.603, 64.11
1, 0.33, False, remove, 0.1, depth, 48, 3.073, 63.78
1, 0.75, False, remove, 0.1, entropy, 48, 3.558, 64.60
1, 0.75, False, remove, 0.1, depth, 48, 4.022, 62.64
1, 1.0, False, remove, 0.1, entropy, 48, 4.495, 65.58
1, 1.0, False, remove, 0.1, depth, 48, 4.963, 62.81
1, 3.0, False, remove, 0.1, entropy, 48, 5.433, 65.74
1, 3.0, False, remove, 0.1, depth, 48, 5.893, 64.44
1, 5.0, False, remove, 0.1, entropy, 48, 6.388, 66.72
1, 5.0, False, remove, 0.1, depth, 48, 6.858, 65.09
3, 0.1, False, remove, 0.1, entropy, 48, 0.940, 63.46
3, 0.1, False, remove, 0.1, depth, 48, 1.418, 62.81
3, 0.5, False, remove, 0.1, entropy, 48, 1.915, 65.09
3, 0.5, False, remove, 0.1, depth, 48, 2.404, 64.11
3, 0.33, False, remove, 0.1, entropy, 48, 2.884, 64.76
3, 0.33, False, remove, 0.1, depth, 48, 3.368, 63.30
3, 0.75, False, remove, 0.1, entropy, 48, 3.855, 64.60
3, 0.75, False, remove, 0.1, depth, 48, 4.309, 64.11
3, 1.0, False, remove, 0.1, entropy, 48, 4.812, 65.09
3, 1.0, False, remove, 0.1, depth, 48, 5.291, 64.27
3, 3.0, False, remove, 0.1, entropy, 48, 5.787, 66.07
3, 3.0, False, remove, 0.1, depth, 48, 6.278, 64.60
3, 5.0, False, remove, 0.1, entropy, 48, 6.775, 66.72
3, 5.0, False, remove, 0.1, depth, 48, 7.259, 65.25
5, 0.1, False, remove, 0.1, entropy, 48, 0.983, 62.15
5, 0.1, False, remove, 0.1, depth, 48, 1.467, 61.66
5, 0.5, False, remove, 0.1, entropy, 48, 1.964, 61.50
5, 0.5, False, remove, 0.1, depth, 48, 2.456, 62.48
5, 0.33, False, remove, 0.1, entropy, 48, 2.971, 62.15
5, 0.33, False, remove, 0.1, depth, 48, 3.498, 61.99
5, 0.75, False, remove, 0.1, entropy, 48, 3.996, 62.64
5, 0.75, False, remove, 0.1, depth, 48, 4.490, 62.32
5, 1.0, False, remove, 0.1, entropy, 48, 4.992, 62.97
5, 1.0, False, remove, 0.1, depth, 48, 5.470, 62.48
5, 3.0, False, remove, 0.1, entropy, 48, 5.971, 63.46
5, 3.0, False, remove, 0.1, depth, 48, 6.437, 62.81
5, 5.0, False, remove, 0.1, entropy, 48, 6.916, 65.58
5, 5.0, False, remove, 0.1, depth, 48, 7.396, 63.30
7, 0.1, False, remove, 0.1, entropy, 48, 1.034, 63.30
7, 0.1, False, remove, 0.1, depth, 48, 1.522, 63.46
7, 0.5, False, remove, 0.1, entropy, 48, 2.028, 63.46
7, 0.5, False, remove, 0.1, depth, 48, 2.511, 63.95
7, 0.33, False, remove, 0.1, entropy, 48, 3.015, 63.78
7, 0.33, False, remove, 0.1, depth, 48, 3.503, 63.78
7, 0.75, False, remove, 0.1, entropy, 48, 4.003, 63.95
7, 0.75, False, remove, 0.1, depth, 48, 4.498, 63.95
7, 1.0, False, remove, 0.1, entropy, 48, 5.012, 64.11
7, 1.0, False, remove, 0.1, depth, 48, 5.510, 64.11
7, 3.0, False, remove, 0.1, entropy, 48, 6.033, 63.95
7, 3.0, False, remove, 0.1, depth, 48, 6.532, 63.78
7, 5.0, False, remove, 0.1, entropy, 48, 7.035, 64.27
7, 5.0, False, remove, 0.1, depth, 48, 7.533, 63.78
10, 0.1, False, remove, 0.1, entropy, 48, 1.274, 63.30
10, 0.1, False, remove, 0.1, depth, 48, 1.760, 62.64
10, 0.5, False, remove, 0.1, entropy, 48, 2.284, 62.81
10, 0.5, False, remove, 0.1, depth, 48, 2.785, 63.62
10, 0.33, False, remove, 0.1, entropy, 48, 3.304, 63.46
10, 0.33, False, remove, 0.1, depth, 48, 3.837, 62.97
10, 0.75, False, remove, 0.1, entropy, 48, 4.356, 63.30
10, 0.75, False, remove, 0.1, depth, 48, 4.861, 63.30
10, 1.0, False, remove, 0.1, entropy, 48, 5.440, 63.13
10, 1.0, False, remove, 0.1, depth, 48, 5.961, 63.13
10, 3.0, False, remove, 0.1, entropy, 48, 6.460, 65.09
10, 3.0, False, remove, 0.1, depth, 48, 6.961, 63.46
10, 5.0, False, remove, 0.1, entropy, 48, 7.472, 64.27
10, 5.0, False, remove, 0.1, depth, 48, 7.967, 63.95
1, 0.1, True, remove, 0.0, entropy, 48, 0.683, 63.30
1, 0.1, True, remove, 0.0, depth, 48, 1.129, 62.64
1, 0.5, True, remove, 0.0, entropy, 48, 1.614, 64.76
1, 0.5, True, remove, 0.0, depth, 48, 2.083, 62.97
1, 0.33, True, remove, 0.0, entropy, 48, 2.547, 63.62
1, 0.33, True, remove, 0.0, depth, 48, 2.999, 63.13
1, 0.75, True, remove, 0.0, entropy, 48, 3.483, 64.60
1, 0.75, True, remove, 0.0, depth, 48, 3.967, 63.78
1, 1.0, True, remove, 0.0, entropy, 48, 4.454, 63.95
1, 1.0, True, remove, 0.0, depth, 48, 4.891, 63.46
1, 3.0, True, remove, 0.0, entropy, 48, 5.384, 63.95
1, 3.0, True, remove, 0.0, depth, 48, 5.852, 63.78
1, 5.0, True, remove, 0.0, entropy, 48, 6.309, 63.78
1, 5.0, True, remove, 0.0, depth, 48, 6.763, 63.62
3, 0.1, True, remove, 0.0, entropy, 48, 0.910, 62.97
3, 0.1, True, remove, 0.0, depth, 48, 1.399, 61.99
3, 0.5, True, remove, 0.0, entropy, 48, 1.881, 64.44
3, 0.5, True, remove, 0.0, depth, 48, 2.381, 63.95
3, 0.33, True, remove, 0.0, entropy, 48, 2.864, 63.95
3, 0.33, True, remove, 0.0, depth, 48, 3.338, 63.95
3, 0.75, True, remove, 0.0, entropy, 48, 3.837, 65.58
3, 0.75, True, remove, 0.0, depth, 48, 4.294, 64.11
3, 1.0, True, remove, 0.0, entropy, 48, 4.814, 66.07
3, 1.0, True, remove, 0.0, depth, 48, 5.276, 64.27
3, 3.0, True, remove, 0.0, entropy, 48, 5.780, 66.39
3, 3.0, True, remove, 0.0, depth, 48, 6.258, 64.93
3, 5.0, True, remove, 0.0, entropy, 48, 6.748, 66.23
3, 5.0, True, remove, 0.0, depth, 48, 7.233, 63.78
5, 0.1, True, remove, 0.0, entropy, 48, 0.976, 62.64
5, 0.1, True, remove, 0.0, depth, 48, 1.471, 62.48
5, 0.5, True, remove, 0.0, entropy, 48, 1.972, 64.60
5, 0.5, True, remove, 0.0, depth, 48, 2.462, 63.95
5, 0.33, True, remove, 0.0, entropy, 48, 2.942, 63.95
5, 0.33, True, remove, 0.0, depth, 48, 3.428, 62.64
5, 0.75, True, remove, 0.0, entropy, 48, 3.916, 65.58
5, 0.75, True, remove, 0.0, depth, 48, 4.401, 64.60
5, 1.0, True, remove, 0.0, entropy, 48, 4.875, 66.72
5, 1.0, True, remove, 0.0, depth, 48, 5.358, 65.58
5, 3.0, True, remove, 0.0, entropy, 48, 5.848, 67.05
5, 3.0, True, remove, 0.0, depth, 48, 6.332, 64.44
5, 5.0, True, remove, 0.0, entropy, 48, 6.827, 66.39
5, 5.0, True, remove, 0.0, depth, 48, 7.304, 64.93
7, 0.1, True, remove, 0.0, entropy, 48, 1.019, 63.30
7, 0.1, True, remove, 0.0, depth, 48, 1.499, 62.81
7, 0.5, True, remove, 0.0, entropy, 48, 1.998, 64.76
7, 0.5, True, remove, 0.0, depth, 48, 2.493, 64.11
7, 0.33, True, remove, 0.0, entropy, 48, 2.998, 64.60
7, 0.33, True, remove, 0.0, depth, 48, 3.479, 63.78
7, 0.75, True, remove, 0.0, entropy, 48, 3.996, 64.93
7, 0.75, True, remove, 0.0, depth, 48, 4.491, 64.27
7, 1.0, True, remove, 0.0, entropy, 48, 4.988, 63.62
7, 1.0, True, remove, 0.0, depth, 48, 5.477, 64.60
7, 3.0, True, remove, 0.0, entropy, 48, 5.987, 65.42
7, 3.0, True, remove, 0.0, depth, 48, 6.473, 64.76
7, 5.0, True, remove, 0.0, entropy, 48, 6.950, 65.58
7, 5.0, True, remove, 0.0, depth, 48, 7.447, 65.09
10, 0.1, True, remove, 0.0, entropy, 48, 1.335, 64.27
10, 0.1, True, remove, 0.0, depth, 48, 1.855, 63.95
10, 0.5, True, remove, 0.0, entropy, 48, 2.343, 64.60
10, 0.5, True, remove, 0.0, depth, 48, 2.838, 64.44
10, 0.33, True, remove, 0.0, entropy, 48, 3.338, 64.44
10, 0.33, True, remove, 0.0, depth, 48, 3.839, 63.78
10, 0.75, True, remove, 0.0, entropy, 48, 4.353, 65.09
10, 0.75, True, remove, 0.0, depth, 48, 4.841, 64.60
10, 1.0, True, remove, 0.0, entropy, 48, 5.352, 65.74
10, 1.0, True, remove, 0.0, depth, 48, 5.835, 63.95
10, 3.0, True, remove, 0.0, entropy, 48, 6.351, 66.88
10, 3.0, True, remove, 0.0, depth, 48, 6.844, 66.23
10, 5.0, True, remove, 0.0, entropy, 48, 7.354, 65.74
10, 5.0, True, remove, 0.0, depth, 48, 7.848, 64.93
1, 0.1, True, remove, 0.25, entropy, 48, 0.677, 59.87
1, 0.1, True, remove, 0.25, depth, 48, 1.153, 59.87
1, 0.5, True, remove, 0.25, entropy, 48, 1.650, 61.66
1, 0.5, True, remove, 0.25, depth, 48, 2.127, 60.52
1, 0.33, True, remove, 0.25, entropy, 48, 2.619, 60.69
1, 0.33, True, remove, 0.25, depth, 48, 3.176, 60.69
1, 0.75, True, remove, 0.25, entropy, 48, 3.662, 61.17
1, 0.75, True, remove, 0.25, depth, 48, 4.129, 60.69
1, 1.0, True, remove, 0.25, entropy, 48, 4.664, 61.99
1, 1.0, True, remove, 0.25, depth, 48, 5.211, 61.34
1, 3.0, True, remove, 0.25, entropy, 48, 5.715, 62.64
1, 3.0, True, remove, 0.25, depth, 48, 6.242, 61.66
1, 5.0, True, remove, 0.25, entropy, 48, 6.719, 62.32
1, 5.0, True, remove, 0.25, depth, 48, 7.210, 61.83
3, 0.1, True, remove, 0.25, entropy, 48, 0.944, 60.20
3, 0.1, True, remove, 0.25, depth, 48, 1.431, 60.85
3, 0.5, True, remove, 0.25, entropy, 48, 1.937, 62.97
3, 0.5, True, remove, 0.25, depth, 48, 2.420, 61.50
3, 0.33, True, remove, 0.25, entropy, 48, 2.921, 62.48
3, 0.33, True, remove, 0.25, depth, 48, 3.416, 60.85
3, 0.75, True, remove, 0.25, entropy, 48, 3.915, 62.15
3, 0.75, True, remove, 0.25, depth, 48, 4.391, 61.50
3, 1.0, True, remove, 0.25, entropy, 48, 4.884, 63.13
3, 1.0, True, remove, 0.25, depth, 48, 5.359, 61.99
3, 3.0, True, remove, 0.25, entropy, 48, 5.856, 63.62
3, 3.0, True, remove, 0.25, depth, 48, 6.344, 63.46
3, 5.0, True, remove, 0.25, entropy, 48, 6.849, 63.30
3, 5.0, True, remove, 0.25, depth, 48, 7.336, 63.62
5, 0.1, True, remove, 0.25, entropy, 48, 0.975, 61.99
5, 0.1, True, remove, 0.25, depth, 48, 1.452, 61.50
5, 0.5, True, remove, 0.25, entropy, 48, 1.964, 63.13
5, 0.5, True, remove, 0.25, depth, 48, 2.450, 62.32
5, 0.33, True, remove, 0.25, entropy, 48, 2.967, 62.64
5, 0.33, True, remove, 0.25, depth, 48, 3.445, 62.15
5, 0.75, True, remove, 0.25, entropy, 48, 3.953, 63.30
5, 0.75, True, remove, 0.25, depth, 48, 4.431, 62.64
5, 1.0, True, remove, 0.25, entropy, 48, 4.949, 63.78
5, 1.0, True, remove, 0.25, depth, 48, 5.434, 62.15
5, 3.0, True, remove, 0.25, entropy, 48, 5.933, 64.76
5, 3.0, True, remove, 0.25, depth, 48, 6.422, 61.34
5, 5.0, True, remove, 0.25, entropy, 48, 6.925, 64.27
5, 5.0, True, remove, 0.25, depth, 48, 7.388, 62.81
7, 0.1, True, remove, 0.25, entropy, 48, 1.055, 62.15
7, 0.1, True, remove, 0.25, depth, 48, 1.542, 61.34
7, 0.5, True, remove, 0.25, entropy, 48, 2.053, 61.34
7, 0.5, True, remove, 0.25, depth, 48, 2.562, 61.99
7, 0.33, True, remove, 0.25, entropy, 48, 3.071, 61.99
7, 0.33, True, remove, 0.25, depth, 48, 3.555, 62.32
7, 0.75, True, remove, 0.25, entropy, 48, 4.055, 62.32
7, 0.75, True, remove, 0.25, depth, 48, 4.552, 62.48
7, 1.0, True, remove, 0.25, entropy, 48, 5.052, 62.81
7, 1.0, True, remove, 0.25, depth, 48, 5.534, 62.64
7, 3.0, True, remove, 0.25, entropy, 48, 6.041, 64.27
7, 3.0, True, remove, 0.25, depth, 48, 6.528, 63.95
7, 5.0, True, remove, 0.25, entropy, 48, 7.033, 64.93
7, 5.0, True, remove, 0.25, depth, 48, 7.518, 63.95
10, 0.1, True, remove, 0.25, entropy, 48, 1.271, 62.97
10, 0.1, True, remove, 0.25, depth, 48, 1.759, 62.81
10, 0.5, True, remove, 0.25, entropy, 48, 2.273, 63.95
10, 0.5, True, remove, 0.25, depth, 48, 2.764, 63.95
10, 0.33, True, remove, 0.25, entropy, 48, 3.281, 63.95
10, 0.33, True, remove, 0.25, depth, 48, 3.776, 63.30
10, 0.75, True, remove, 0.25, entropy, 48, 4.291, 64.60
10, 0.75, True, remove, 0.25, depth, 48, 4.791, 63.30
10, 1.0, True, remove, 0.25, entropy, 48, 5.308, 65.25
10, 1.0, True, remove, 0.25, depth, 48, 5.815, 64.11
10, 3.0, True, remove, 0.25, entropy, 48, 6.338, 65.25
10, 3.0, True, remove, 0.25, depth, 48, 6.830, 64.11
10, 5.0, True, remove, 0.25, entropy, 48, 7.332, 65.58
10, 5.0, True, remove, 0.25, depth, 48, 7.835, 63.13
1, 0.1, True, remove, 0.1, entropy, 48, 0.689, 60.85
1, 0.1, True, remove, 0.1, depth, 48, 1.162, 59.87
1, 0.5, True, remove, 0.1, entropy, 48, 1.649, 62.48
1, 0.5, True, remove, 0.1, depth, 48, 2.149, 59.87
1, 0.33, True, remove, 0.1, entropy, 48, 2.648, 61.99
1, 0.33, True, remove, 0.1, depth, 48, 3.106, 60.52
1, 0.75, True, remove, 0.1, entropy, 48, 3.593, 63.30
1, 0.75, True, remove, 0.1, depth, 48, 4.057, 60.85
1, 1.0, True, remove, 0.1, entropy, 48, 4.534, 63.30
1, 1.0, True, remove, 0.1, depth, 48, 5.004, 61.01
1, 3.0, True, remove, 0.1, entropy, 48, 5.486, 65.25
1, 3.0, True, remove, 0.1, depth, 48, 5.944, 63.95
1, 5.0, True, remove, 0.1, entropy, 48, 6.419, 65.74
1, 5.0, True, remove, 0.1, depth, 48, 6.869, 64.27
3, 0.1, True, remove, 0.1, entropy, 48, 0.925, 65.42
3, 0.1, True, remove, 0.1, depth, 48, 1.410, 64.44
3, 0.5, True, remove, 0.1, entropy, 48, 1.897, 65.42
3, 0.5, True, remove, 0.1, depth, 48, 2.378, 64.44
3, 0.33, True, remove, 0.1, entropy, 48, 2.887, 65.25
3, 0.33, True, remove, 0.1, depth, 48, 3.360, 65.09
3, 0.75, True, remove, 0.1, entropy, 48, 3.859, 65.25
3, 0.75, True, remove, 0.1, depth, 48, 4.344, 64.44
3, 1.0, True, remove, 0.1, entropy, 48, 4.838, 65.42
3, 1.0, True, remove, 0.1, depth, 48, 5.317, 64.44
3, 3.0, True, remove, 0.1, entropy, 48, 5.824, 65.58
3, 3.0, True, remove, 0.1, depth, 48, 6.309, 64.44
3, 5.0, True, remove, 0.1, entropy, 48, 6.807, 66.23
3, 5.0, True, remove, 0.1, depth, 48, 7.283, 64.27
5, 0.1, True, remove, 0.1, entropy, 48, 0.971, 63.78
5, 0.1, True, remove, 0.1, depth, 48, 1.457, 62.81
5, 0.5, True, remove, 0.1, entropy, 48, 1.950, 63.95
5, 0.5, True, remove, 0.1, depth, 48, 2.487, 63.62
5, 0.33, True, remove, 0.1, entropy, 48, 2.984, 64.44
5, 0.33, True, remove, 0.1, depth, 48, 3.472, 63.95
5, 0.75, True, remove, 0.1, entropy, 48, 3.984, 64.44
5, 0.75, True, remove, 0.1, depth, 48, 4.492, 64.11
5, 1.0, True, remove, 0.1, entropy, 48, 5.000, 64.44
5, 1.0, True, remove, 0.1, depth, 48, 5.499, 63.95
5, 3.0, True, remove, 0.1, entropy, 48, 5.998, 65.58
5, 3.0, True, remove, 0.1, depth, 48, 6.476, 63.62
5, 5.0, True, remove, 0.1, entropy, 48, 6.985, 66.23
5, 5.0, True, remove, 0.1, depth, 48, 7.476, 64.44
7, 0.1, True, remove, 0.1, entropy, 48, 1.045, 64.44
7, 0.1, True, remove, 0.1, depth, 48, 1.546, 63.95
7, 0.5, True, remove, 0.1, entropy, 48, 2.032, 64.44
7, 0.5, True, remove, 0.1, depth, 48, 2.554, 63.62
7, 0.33, True, remove, 0.1, entropy, 48, 3.129, 65.09
7, 0.33, True, remove, 0.1, depth, 48, 3.629, 64.27
7, 0.75, True, remove, 0.1, entropy, 48, 4.147, 64.11
7, 0.75, True, remove, 0.1, depth, 48, 4.650, 62.97
7, 1.0, True, remove, 0.1, entropy, 48, 5.153, 64.44
7, 1.0, True, remove, 0.1, depth, 48, 5.680, 63.46
7, 3.0, True, remove, 0.1, entropy, 48, 6.198, 66.07
7, 3.0, True, remove, 0.1, depth, 48, 6.690, 65.58
7, 5.0, True, remove, 0.1, entropy, 48, 7.200, 65.91
7, 5.0, True, remove, 0.1, depth, 48, 7.685, 65.42
10, 0.1, True, remove, 0.1, entropy, 48, 1.310, 64.76
10, 0.1, True, remove, 0.1, depth, 48, 1.826, 63.62
10, 0.5, True, remove, 0.1, entropy, 48, 2.349, 63.62
10, 0.5, True, remove, 0.1, depth, 48, 2.830, 63.62
10, 0.33, True, remove, 0.1, entropy, 48, 3.334, 62.81
10, 0.33, True, remove, 0.1, depth, 48, 3.820, 63.78
10, 0.75, True, remove, 0.1, entropy, 48, 4.349, 64.44
10, 0.75, True, remove, 0.1, depth, 48, 4.851, 63.30
10, 1.0, True, remove, 0.1, entropy, 48, 5.363, 64.44
10, 1.0, True, remove, 0.1, depth, 48, 5.906, 62.81
10, 3.0, True, remove, 0.1, entropy, 48, 6.412, 64.93
10, 3.0, True, remove, 0.1, depth, 48, 6.909, 63.62
10, 5.0, True, remove, 0.1, entropy, 48, 7.424, 64.60
10, 5.0, True, remove, 0.1, depth, 48, 7.927, 63.62
---BEST SPA(s) FOUND
Best hyperparameters: {'INCLUDE_PREV_CONTEXT': True, 'GAMMA': 3.0, 'NB_TRAIN_ITERATIONS': 10, 'HANDLE_N_SETTING': 'remove', 'RATIO_PRETRAIN_TRAIN': 0.0, 'ENSEMBLE_TYPE': 'depth', 'NUM_THREADS': 48, 'TRAINING_TIME': 6.844217040576041, 'VALIDATION ACCURACY': 0.6623164763458401}
-----TESTING
Final accuracy with best hyperparameters: 63.62
Mem in MB: 19.71
Mem in MB: 19.43
-----TIME PROFILING+
Read train + val data time:  0.15906
Number of training symbols: 1471200
Length of one training sequence: 300
Total training time: 242.986 seconds
Number of test sequences: 613
Length of test sequence: 300
Read test data time:  0.00707
Total inference time: 0.525 seconds
Inference time/symbol: 2.853372815415028e-06 seconds
-----MEMORY REPORT
Filename: /data/home/nsagan/LZ-Genomics/Train.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   229    138.3 MiB    138.3 MiB           1   @profile
   230                                         def main(dataset_folder, pretrain_file):
   231                                             global INCLUDE_PREV_CONTEXT
   232                                             global GAMMA
   233                                             global NB_TRAIN_ITERATIONS 
   234                                             global HANDLE_N_SETTING 
   235                                             global RATIO_PRETRAIN_TRAIN 
   236                                             global ENSEMBLE_TYPE 
   237                                             global NUM_THREADS
   238                                             
   239                                             global include_prev_contexts
   240                                             global gammas 
   241                                             global nb_train_iterations 
   242                                             global handle_N_settings 
   243                                             global ratio_pretrain_train
   244                                             global ensemble_type
   245                                             global num_threads
   246                                         
   247    138.3 MiB      0.0 MiB           1       read_data_in_time = time.perf_counter()
   248                                             
   249                                             # Read train, val, test data 
   250    138.3 MiB      0.0 MiB           1       train_path = f"{dataset_folder}/train.csv"
   251    138.3 MiB      0.0 MiB           1       val_path = f"{dataset_folder}/dev.csv"
   252    138.3 MiB      0.0 MiB           1       test_path = f"{dataset_folder}/test.csv"
   253                                             
   254                                         
   255    141.1 MiB      2.8 MiB           1       train_data = pd.read_csv(train_path)
   256    141.7 MiB      0.6 MiB           1       validation_data = pd.read_csv(val_path)
   257                                             
   258    141.7 MiB      0.0 MiB           1       ALPHABET_SIZE = 4
   259    141.7 MiB      0.0 MiB           1       unique_labels = train_data['label'].unique()
   260                                             
   261    237.7 MiB      0.0 MiB           2       with open(pretrain_file, 'r') as file:
   262    237.7 MiB     96.0 MiB           1           pretrain_data = file.read()
   263                                             
   264                                             # Train all SPAs using all possible combinations of hyperparams
   265                                             # Test all on validation set, return best SPA
   266    237.7 MiB      0.0 MiB           1       results_df = pd.DataFrame(columns=[
   267                                             "INCLUDE_PREV_CONTEXT", "GAMMA", "NB_TRAIN_ITERATIONS", 
   268                                             "HANDLE_N_SETTING", "RATIO_PRETRAIN_TRAIN", "ENSEMBLE_TYPE", "NUM_THREADS", "VALIDATION ACCURACY"
   269                                             ])
   270                                         
   271    237.7 MiB      0.0 MiB           1       print("-----TRAINING")
   272    237.7 MiB      0.0 MiB           1       print("---SEARCH FOR BEST SPA(s)")
   273    237.7 MiB      0.0 MiB           1       print("nb_iterations , gamma, include_prev_context, handle_N_setting, ratio, ensemble type, num_threads, time taken, accuracy", flush=True)
   274    237.7 MiB      0.0 MiB           1       train_start_time = time.perf_counter()
   275    351.8 MiB    -30.1 MiB           8       for include_prev_context, handle_N_setting, ratio in itertools.product(
   276    237.7 MiB      0.0 MiB           1           include_prev_contexts, handle_N_settings, ratio_pretrain_train
   277                                             ):  
   278    351.8 MiB    -16.3 MiB           6           INCLUDE_PREV_CONTEXT = include_prev_context
   279    351.8 MiB    -16.3 MiB           6           GAMMA = gammas
   280    351.8 MiB    -16.3 MiB           6           NB_TRAIN_ITERATIONS = 0
   281    351.8 MiB    -16.3 MiB           6           HANDLE_N_SETTING = handle_N_setting
   282    351.8 MiB    -16.3 MiB           6           RATIO_PRETRAIN_TRAIN = ratio 
   283    351.8 MiB    -16.3 MiB           6           ENSEMBLE_TYPE = ensemble_type
   284    351.8 MiB    -16.3 MiB           6           NUM_THREADS = num_threads
   285                                                 
   286    352.0 MiB    -13.2 MiB           6           train_data = handle_N(train_data, setting=HANDLE_N_SETTING)
   287    352.0 MiB    -16.4 MiB           6           nb_train_seqs = len(train_data)
   288    352.0 MiB    -16.4 MiB           6           seq_len = len(train_data.iloc[0, 0])
   289    352.0 MiB    -16.4 MiB           6           nb_train_symbols = nb_train_seqs * seq_len
   290                                                 
   291                                                 # Create list of spas based on number of labels: (spa_0 and spa_1 for labels 0, 1)
   292    352.0 MiB   -529.9 MiB          30           spa = [LZ78SPA(alphabet_size=ALPHABET_SIZE, compute_training_loss=False) for _ in unique_labels]
   293    265.1 MiB   -602.2 MiB          18           for i in range(len(unique_labels)):
   294    265.1 MiB   -275.8 MiB          24               spa[i].set_inference_config(
   295    265.1 MiB   -137.9 MiB          12                   lb=1e-5,
   296    265.1 MiB   -137.9 MiB          12                   ensemble_type="entropy",
   297    265.1 MiB   -137.9 MiB          12                   ensemble_n=10,
   298    265.1 MiB   -137.9 MiB          12                   backshift_parsing=True,
   299    265.1 MiB   -137.9 MiB          12                   backshift_ctx_len=20,
   300    265.1 MiB   -137.9 MiB          12                   backshift_break_at_phrase=True
   301                                                     )
   302                                         
   303    265.1 MiB    -68.8 MiB           6           nb_pretrain_symbols = math.ceil(RATIO_PRETRAIN_TRAIN * nb_train_symbols)
   304    351.8 MiB    325.6 MiB           6           pretrain_spa(pretrain_data, spa, nb_pretrain_symbols) 
   305                                         
   306    351.8 MiB   -106.1 MiB           6           iterated_times = 0
   307    352.0 MiB   -508.0 MiB          36           for nb_iterations in nb_train_iterations:
   308    352.0 MiB   -477.1 MiB          30               train_one_iter_start_time = time.perf_counter()
   309    352.0 MiB  -1258.1 MiB          90               for _ in range(nb_iterations - iterated_times):
   310    352.0 MiB   -711.1 MiB          60                   train_spa_oneIter(train_data, spa)
   311                                                     
   312    352.0 MiB   -399.8 MiB          30               iterated_times = nb_iterations
   313    352.0 MiB  -3213.0 MiB         240               for gamma in gammas:
   314    352.0 MiB  -8448.7 MiB         630                   for ensemble in ENSEMBLE_TYPE:
   315                                                         # Test on validation test to assess this combination of hyperparams
   316    352.0 MiB  -5621.5 MiB         420                       validation_data = handle_N(validation_data)
   317    352.0 MiB -16868.6 MiB        1260                       for index in range(len(spa)):
   318    352.0 MiB -11245.7 MiB         840                           spa[index].set_inference_config(gamma=gamma, ensemble_type=ensemble)
   319    352.0 MiB  -5638.3 MiB         420                       accuracy = test_seq(validation_data, spa, num_threads)
   320    352.0 MiB  -5638.9 MiB         420                       train_one_iter_end_time = time.perf_counter()
   321    352.0 MiB  -5638.9 MiB         420                       train_one_iter_duration = train_one_iter_end_time - train_one_iter_start_time
   322    352.0 MiB  -5638.9 MiB         420                       print(f"{nb_iterations}, {gamma}, {include_prev_context}, {handle_N_setting}, {ratio}, {ensemble}, {NUM_THREADS}, {train_one_iter_duration:.3f}, {(accuracy * 100):.2f}", flush=True)
   323                                         
   324                                                         
   325                                                         
   326    352.0 MiB -11276.1 MiB         840                       current_result = pd.DataFrame([{
   327    352.0 MiB  -5639.0 MiB         420                           "INCLUDE_PREV_CONTEXT": INCLUDE_PREV_CONTEXT,
   328    352.0 MiB  -5638.9 MiB         420                           "GAMMA": gamma,
   329    352.0 MiB  -5638.9 MiB         420                           "NB_TRAIN_ITERATIONS": nb_iterations,
   330    352.0 MiB  -5638.9 MiB         420                           "HANDLE_N_SETTING": HANDLE_N_SETTING,
   331    352.0 MiB  -5638.9 MiB         420                           "RATIO_PRETRAIN_TRAIN": RATIO_PRETRAIN_TRAIN,
   332    352.0 MiB  -5638.9 MiB         420                           "ENSEMBLE_TYPE": ensemble,
   333    352.0 MiB  -5638.9 MiB         420                           "NUM_THREADS": NUM_THREADS,
   334    352.0 MiB  -5638.9 MiB         420                           "TRAINING_TIME": train_one_iter_duration, 
   335    352.0 MiB  -5638.9 MiB         420                           "VALIDATION ACCURACY": accuracy
   336                                                             }])
   337                                         
   338                                                         # Concatenate the current result with results_df
   339    352.0 MiB  -2814.6 MiB         210                   results_df = results_df.dropna(axis=1, how='all')
   340    352.0 MiB  -2813.1 MiB         210                   current_result = current_result.dropna(axis=1, how='all')
   341                                         
   342    352.0 MiB  -2813.0 MiB         210                   results_df = pd.concat([results_df, current_result], ignore_index=True)
   343                                         
   344                                             
   345                                             # Find the best hyperparameter combination based on the highest accuracy
   346    338.5 MiB    -13.4 MiB           1       print("---BEST SPA(s) FOUND")
   347    338.5 MiB      0.0 MiB           1       best_row = results_df.loc[results_df['VALIDATION ACCURACY'].idxmax()]
   348    338.5 MiB      0.0 MiB           1       best_params = best_row.to_dict()
   349    338.5 MiB      0.0 MiB           1       print("Best hyperparameters:", best_params)
   350                                         
   351                                             # Retrain and test using the best hyperparameters
   352    338.5 MiB      0.0 MiB           1       INCLUDE_PREV_CONTEXT = best_params["INCLUDE_PREV_CONTEXT"]
   353    338.5 MiB      0.0 MiB           1       GAMMA = best_params["GAMMA"]
   354    338.5 MiB      0.0 MiB           1       NB_TRAIN_ITERATIONS = int(best_params["NB_TRAIN_ITERATIONS"])
   355    338.5 MiB      0.0 MiB           1       HANDLE_N_SETTING = best_params["HANDLE_N_SETTING"]
   356    338.5 MiB      0.0 MiB           1       RATIO_PRETRAIN_TRAIN = best_params["RATIO_PRETRAIN_TRAIN"]
   357    338.5 MiB      0.0 MiB           1       ENSEMBLE_TYPE = best_params["ENSEMBLE_TYPE"]
   358    338.5 MiB      0.0 MiB           1       NUM_THREADS = best_params["NUM_THREADS"]
   359                                         
   360                                             # Retrain our best SPAs and use that to test on test data 
   361    338.5 MiB    -90.5 MiB           5       spa = [LZ78SPA(alphabet_size=ALPHABET_SIZE, gamma= GAMMA, compute_training_loss=False) for _ in unique_labels]
   362    248.0 MiB    -90.5 MiB           3       for i in range(len(unique_labels)):
   363    248.0 MiB      0.0 MiB           4           spa[i].set_inference_config(
   364    248.0 MiB      0.0 MiB           2               lb=1e-5,
   365    248.0 MiB      0.0 MiB           2               ensemble_type= ENSEMBLE_TYPE,
   366    248.0 MiB      0.0 MiB           2               ensemble_n=10,
   367    248.0 MiB      0.0 MiB           2               backshift_parsing=True,
   368    248.0 MiB      0.0 MiB           2               backshift_ctx_len=20,
   369    248.0 MiB      0.0 MiB           2               backshift_break_at_phrase=True
   370                                                 )
   371                                         
   372    248.0 MiB      0.0 MiB           1       train_data = handle_N(train_data, setting=HANDLE_N_SETTING)
   373    248.0 MiB      0.0 MiB           1       nb_train_seqs = len(train_data)
   374    248.0 MiB      0.0 MiB           1       seq_len = len(train_data.iloc[0, 0])
   375    248.0 MiB      0.0 MiB           1       nb_train_symbols = nb_train_seqs * seq_len
   376    248.0 MiB      0.0 MiB           1       nb_pretrain_symbols = math.ceil(RATIO_PRETRAIN_TRAIN * nb_train_symbols)
   377                                         
   378    248.0 MiB      0.0 MiB           1       pretrain_spa(pretrain_data, spa, nb_pretrain_symbols) 
   379    342.0 MiB     94.1 MiB           1       train_spa(train_data, spa, iterations=NB_TRAIN_ITERATIONS)
   380                                         
   381    342.0 MiB      0.0 MiB           1       train_end_time = time.perf_counter()
   382    342.0 MiB      0.0 MiB           1       train_duration = train_end_time - train_start_time
   383                                         
   384                                             
   385                                             
   386                                             # Final test
   387    342.0 MiB      0.0 MiB           1       print("-----TESTING")
   388    342.0 MiB      0.0 MiB           1       read_test_data_start_time = time.perf_counter()
   389    342.0 MiB      0.0 MiB           1       test_data = pd.read_csv(test_path)
   390                                         
   391    342.0 MiB      0.0 MiB           1       inference_start_time = time.perf_counter()
   392                                         
   393    342.0 MiB      0.0 MiB           1       test_data = handle_N(test_data)
   394    342.0 MiB     -0.0 MiB           1       test_accuracy = test_seq(test_data, spa, NUM_THREADS)
   395                                         
   396    342.0 MiB      0.0 MiB           1       inference_end_time = time.perf_counter()
   397    342.0 MiB      0.0 MiB           1       print(f"Final accuracy with best hyperparameters: {(test_accuracy*100):.2f}")
   398                                             
   399                                                 
   400    342.0 MiB      0.0 MiB           1       inference_duration = inference_end_time - inference_start_time
   401                                         
   402    342.0 MiB      0.0 MiB           1       label = 0
   403    381.0 MiB      0.0 MiB           3       for sp in spa:
   404    381.0 MiB     38.8 MiB           2           spa_bytes = bytearray(sp.to_bytes())
   405    381.0 MiB      0.0 MiB           2           print(f"Mem in MB: {len(spa_bytes) / (1024 * 1024):.2f}", flush=True)
   406    381.0 MiB      0.2 MiB           2           makedirs("best_spas", exist_ok=True)
   407                                                 # Extract the part after 'GUE/' and replace slashes with underscores
   408    381.0 MiB      0.0 MiB           2           binary_file_name = dataset_folder.split("GUE/", 1)[-1].replace("/", "_")
   409                                                 
   410                                                 # Create the full path for the binary file
   411    381.0 MiB      0.0 MiB           2           binary_file_path = os.path.join("best_spas", f"{binary_file_name}_{label}.bin")
   412    381.0 MiB      0.0 MiB           2           label += 1
   413                                                 # Save the binary file
   414    381.0 MiB      0.0 MiB           4           with open(binary_file_path, 'wb') as file:
   415    381.0 MiB      0.0 MiB           2               file.write(spa_bytes)
   416                                             
   417                                         
   418    381.0 MiB      0.0 MiB           1       print("-----TIME PROFILING+")
   419    381.0 MiB      0.0 MiB           1       print(f"Read train + val data time: {(train_start_time - read_data_in_time): .5f}")
   420    381.0 MiB      0.0 MiB           1       print(f"Number of training symbols: {nb_train_symbols}")
   421    381.0 MiB      0.0 MiB           1       print(f"Length of one training sequence: {len(train_data.iloc[0, 0])}")
   422    381.0 MiB      0.0 MiB           1       print(f"Total training time: {train_duration:.3f} seconds")
   423                                             
   424                                         
   425    381.0 MiB      0.0 MiB           1       print(f"Number of test sequences: {len(test_data)}")
   426    381.0 MiB      0.0 MiB           1       print(f"Length of test sequence: {len(test_data.iloc[0, 0])}")
   427    381.0 MiB      0.0 MiB           1       print(f"Read test data time: {(inference_start_time - read_test_data_start_time): .5f}")
   428    381.0 MiB      0.0 MiB           1       print(f"Total inference time: {inference_duration:.3f} seconds")
   429    381.0 MiB      0.0 MiB           1       print(f"Inference time/symbol: {inference_duration/(len(test_data) * len(test_data.iloc[0, 0]))} seconds")
   430                                         
   431    381.1 MiB      0.1 MiB           1       print("-----MEMORY REPORT")


